[runtime]
sampler = multinest

[grid]
nsample_dimension=20
nstep = 20

[snake]
threshold=4.0
nsample_dimension=40
maxiter=225

[multinest]
max_iterations=2000
live_points=200
multinest_outfile_root=
nstep = 12
resume=F

[test]
save_dir=example_JP_output
fatal_errors=T

[output]
filename=example_JP_multinest2000_200_DIR_myxi.txt
format=text

[pipeline]
modules = consistency camb sigma8_rescale halofit extrapolate_power load_nz photoz_bias linear_alignment shear_shear add_intrinsic 2pt kids
values = demos/values_ex_JP.ini
priors = demos/priors_ex_JP.ini
likelihoods = kids
extra_output = 
quiet=F
timing=F
debug=T

[consistency]
file = cosmosis-standard-library/utility/consistency/consistency_interface.py

[camb]
file = cosmosis-standard-library/boltzmann/camb/camb.so
mode=all
lmax=2500
feedback=0

[halofit]
file = cosmosis-standard-library/boltzmann/halofit/halofit_module.so

[sigma8_rescale]
file = cosmosis-standard-library/utility/sample_sigma8/sigma8_rescale.py

[load_nz]
file = cosmosis-standard-library/number_density/load_nz_fits/load_nz_fits.py
nz_file = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/kids/KiDS_like_DIR_myxi.fits
;nz_file = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/kids/KiDS_like_CC_N_myxi.fits
data_sets=SAMPLE

[photoz_bias]
file = cosmosis-standard-library/number_density/photoz_bias/photoz_bias.py
mode = additive
sample = nz_sample
bias_section = wl_photoz_errors

[linear_alignment]
file = cosmosis-standard-library/intrinsic_alignments/la_model/linear_alignments_interface.py
method = bk_corrected

[shear_shear]
file = cosmosis-standard-library/structure/projection/project_2d.py
ell_min = 20.0
ell_max = 10000.0
n_ell = 220
shear-shear = sample-sample 
shear-intrinsic = sample-sample
intrinsic-intrinsic = sample-sample
;position-shear = sample-sample
verbose = F


[add_intrinsic]
file=cosmosis-standard-library/shear/add_intrinsic/add_intrinsic.py
position-shear=False

;This Nicaea code converts C_ell into xi(theta).
;It is fast and accurate but requires a high ell_max, as shown above
[2pt]
file = cosmosis-standard-library/shear/cl_to_xi_nicaea/nicaea_interface.so


[kids]
file = cosmosis-standard-library/likelihood/2pt/2pt_like.py
data_file=${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/kids/KiDS_like_DIR_myxi.fits
;data_file=${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/kids/KiDS_like_CC_N_myxi.fits
gaussian_covariance=F
covmat_name=COVMAT
like_name=kids

;data_sets=all
data_sets = xi_plus xi_minus

angle_range_xi_plus_1_1 = 0.5  72.0
angle_range_xi_plus_1_2 = 0.5  72.0
angle_range_xi_plus_1_3 = 0.5  72.0
angle_range_xi_plus_1_4 = 0.5  72.0
angle_range_xi_plus_2_2 = 0.5  72.0
angle_range_xi_plus_2_3 = 0.5  72.0
angle_range_xi_plus_2_4 = 0.5  72.0
angle_range_xi_plus_3_3 = 0.5  72.0
angle_range_xi_plus_3_4 = 0.5  72.0
angle_range_xi_plus_4_4 = 0.5  72.0

angle_range_xi_minus_1_1 = 4.2  300.0
angle_range_xi_minus_1_2 = 4.2  300.0
angle_range_xi_minus_1_3 = 4.2  300.0
angle_range_xi_minus_1_4 = 4.2  300.0
angle_range_xi_minus_2_2 = 4.2  300.0
angle_range_xi_minus_2_3 = 4.2  300.0
angle_range_xi_minus_2_4 = 4.2  300.0
angle_range_xi_minus_3_3 = 4.2  300.0
angle_range_xi_minus_3_4 = 4.2  300.0
angle_range_xi_minus_4_4 = 4.2  300.0


[extrapolate_power]
file=cosmosis-standard-library/boltzmann/extrapolate/extrapolate_power.py
kmax=500.0

[planck]
file = cosmosis-standard-library/likelihood/planck2015/planck_interface.so
; The Planck module has some file paths it needs setting
; These files can all be downloaded from the Planck archives
data_1 = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/planck2015/data/plik_lite_v18_TT.clik
data_2 = ${COSMOSIS_SRC_DIR}/cosmosis-standard-library/likelihood/planck2015/data/commander_rc2_v1.1_l2_29_B.clik
; You can also add more here
; and lensing files can be included with, e.g.:
;lensing_1 = /path/to/wherever/you/downloaded/data/smica_g30_ftl_full_pttptt.clik_lensing

